---
# - name: Print all available facts
#   ansible.builtin.debug:
#     var: ansible_facts

# - name: print inventory_hostname
#   ansible.builtin.debug:
#     var: inventory_hostname

- name: set hostname
  hostname:
    name: "{{ inventory_hostname }}"

- name: configure pacman mirror
  template: src=mirrorlist.j2 dest=/etc/pacman.d/mirrorlist owner=root group=root mode=0644
  when: china_mirror

- name: install pacman config
  template: src=pacman.conf.j2 dest=/etc/pacman.conf mode=0644 owner=root group=root
  notify: update package cache

- name: Flush handlers
  meta: flush_handlers

- name: install anchlinuxcn keyring
  pacman:
    name: archlinuxcn-keyring
    state: present

- name: update package cache
  pacman: update_cache=yes

- name: start and enable systemd-timesyncd
  service: name=systemd-timesyncd enabled=yes state=started

- name: set timezone to China Standard Time
  community.general.timezone:
    name: Asia/Shanghai

- name: generate locales
  locale_gen: name={{ item }} state=present
  with_items:
    - en_US.UTF-8

- name: configure locales
  copy: src=locale.conf dest=/etc/locale.conf owner=root group=root mode=0644

# TODO: configure network related work
# TODO: zram swap if needed
# TODO: logs

# The `which` package is necessary for pipenv to find proper python interpreter
- name: install necessary packages
  pacman:
    name:
      - vim
      - git
      - pacman-contrib
      - docker
      - python-docker
      - docker-compose
      - bash-completion
      - python-virtualenv
      - which
      - fail2ban
      - firewalld
    state: present

- name: install some tools
  pacman:
    name: [htop, neofetch, trash-cli, strace, bind, rsync, speedtest-cli, archlinux-contrib, ncdu, iperf3, lsof]
    state: present

- name: enable and start docker
  service: name=docker enabled=yes state=started

- name: enable paccache timer
  systemd: name=paccache.timer enabled=yes state=started daemon_reload=yes

- name: create directory for htmls
  file: path=/var/www state=directory mode=0755 owner=root group=root

- name: install root shell config
  copy: src={{ item }} dest=/root/.{{ item }} mode=0644
  with_items:
    - bashrc
    - bash_profile

- name: install pip conf
  template: src=pip.conf.j2 dest=/etc/pip.conf owner=root group=root mode=0644
  when: china_mirror

- name: configure sshd
  template: src=sshd_config.j2 dest=/etc/ssh/sshd_config owner=root group=root mode=0644 validate='/usr/sbin/sshd -t -f %s'
  notify:
    - restart sshd

- name: enable and start fail2ban
  service: name=fail2ban enabled=yes state=started

- name: copy fail2ban config
  template: src=jail.local.j2 dest=/etc/fail2ban/jail.local owner=root group=root mode=0644
  notify:
    - restart fail2ban

- name: Enable and start firewalld
  service: name=firewalld enabled=yes state=started

# expose tailscale ports are needed because NAT traversal does not always work
- name: Add firewalld service
  template: src=firewalld_tailscale.xml.j2 dest=/etc/firewalld/services/tailscale.xml mode=0644 owner=root group=root

- name: Copy firewalld config
  template: src=firewalld.conf.j2 dest=/etc/firewalld/firewalld.conf owner=root group=root mode=0644
  notify:
    - reload firewalld

- name: Copy firewalld public zone config
  template: src=firewalld_public.xml.j2 dest=/etc/firewalld/zones/public.xml owner=root group=root mode=0644
  notify:
    - reload firewalld

# https://wiki.archlinux.org/title/Kernel_module#systemd
- name: load bbr module with systemd
  copy:
    content: tcp_bbr
    dest: /etc/modules-load.d/bbr.conf
    mode: "0644"

- name: copy kernel config file
  copy: src=50-bbr-sysctl.conf dest=/etc/sysctl.d/ mode=644
  register: copy_config_res

- name: load the bbr module
  community.general.modprobe:
    name: tcp_bbr
    state: present

- name: apply kernel parameters
  command: sysctl --system
  when: copy_config_res.changed
